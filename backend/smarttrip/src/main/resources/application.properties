spring.application.name=smartTrip
#server.port=8080
app.page-size=10
spring.datasource.url=jdbc:postgresql://postgres:5432/smart-trip
spring.datasource.username=postgres
spring.datasource.password=1234
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect
dotenv.enabled=true

jwt.secret=BJw4tVYJg6U3xNmU1fKe9g7Mcb4Vazq3kzXna2hp8rYEcJqODNnA6P4E7YZfHz9L

#open-weather.api.key=${WEATHER_API_KEY:__MISSING__}
open-weather.api.key=2d4ab692f529bfb094c93aa476efca81
open-weather.api.url=https://api.openweathermap.org/data/3.0/onecall
open-weather.api.units=metric

spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=100,expireAfterWrite=5s


# Google OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=email,profile

# Facebook OAuth2 configuration
spring.security.oauth2.client.registration.facebook.client-id=YOUR_FACEBOOK_APP_ID
spring.security.oauth2.client.registration.facebook.client-secret=YOUR_FACEBOOK_APP_SECRET
spring.security.oauth2.client.registration.facebook.scope=email,public_profile

# Optional: Explicitly define Facebook's provider details
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture